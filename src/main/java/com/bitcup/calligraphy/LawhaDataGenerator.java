package com.bitcup.calligraphy;import com.bitcup.calligraphy.domain.Lawha;import com.bitcup.calligraphy.domain.Type;import com.bitcup.calligraphy.repository.LawhaRepository;import com.bitcup.calligraphy.util.Constants;import com.google.common.collect.Sets;import org.apache.commons.lang.SerializationUtils;import org.joda.time.DateTime;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import javax.annotation.PostConstruct;import java.security.SecureRandom;/** * @author bitcup */@Componentpublic class LawhaDataGenerator {    private SecureRandom random = new SecureRandom();    private Lawha[] lawhat = new Lawha[8];    @Autowired    private LawhaRepository lawhaRepository;    @PostConstruct    private void init() {        Lawha l1 = new Lawha();        l1.setName("Wahdahu");        l1.setNameAr("وحده");        l1.setArtist("Artist 1");        l1.setArtistAr("خطاط");        l1.setImgSrc("http://wall.arabiccalligraphy.com/static/lawha/detail/2013/06/dplv9ThUqQ.jpg");        l1.setLikes(10l);        l1.setType(Type.WALL);        l1.setTags(Sets.newHashSet("Thuluth", "Classic"));        lawhat[0] = l1;        Lawha l2 = new Lawha();        l2.setName("Allah");        l2.setNameAr("الله");        l2.setArtist("Artist 2");        l2.setArtistAr("خطاط");        l2.setType(Type.WALL);        l2.setImgSrc("http://wall.arabiccalligraphy.com/static/lawha/detail/2012/02/Z6cdAasf7w.jpg");        l2.setTags(Sets.newHashSet("Farsi", "Classic"));        lawhat[1] = l2;        Lawha l3 = new Lawha();        l3.setName("Hurriya");        l3.setNameAr("حرية");        l3.setArtist("Artist 3");        l3.setArtistAr("خطاط");        l3.setType(Type.WALL);        l3.setImgSrc("http://wall.arabiccalligraphy.com/static/lawha/detail/2013/06/Fo7Tobvuad.jpg");        l3.setTags(Sets.newHashSet("Kufi", "Classic"));        lawhat[2] = l3;        Lawha l4 = new Lawha();        l4.setName("Alhamd");        l4.setNameAr("الحمد");        l4.setArtist("Artist 4");        l4.setArtistAr("خطاط");        l4.setType(Type.WALL);        l4.setImgSrc("http://wall.arabiccalligraphy.com/static/lawha/detail/2013/02/v7KPd8rUpI.jpg");        l4.setTags(Sets.newHashSet("Thuluth", "Classic"));        lawhat[3] = l4;        Lawha l5 = new Lawha();        l5.setName("Bismil");        l5.setNameAr("بسم الله");        l5.setArtist("Artist 5");        l5.setArtistAr("خطاط");        l5.setType(Type.WALL);        l5.setImgSrc("http://wall.arabiccalligraphy.com/static/lawha/detail/2012/02/SD2me0GQM9.jpg");        l5.setTags(Sets.newHashSet("Turra", "Modern"));        lawhat[4] = l5;        Lawha l6 = new Lawha();        l6.setName("Tazawwadu");        l6.setNameAr("تزودوا");        l6.setArtist("Mokhtar El-Baba");        l6.setArtistAr("مختار البابا");        l6.setType(Type.MOKHTAR_HURUFIYYAT);        l6.setImgSrc("http://www.arabiccalligraphy.com/static/gallery/slide/tazawwadu.png");        l6.setTags(Sets.newHashSet("Thuluth", "Hurufiyyat"));        lawhat[5] = l6;        Lawha l7 = new Lawha();        l7.setName("Ta3allam");        l7.setNameAr("تعلم");        l7.setArtist("Mokhtar El-Baba");        l7.setArtistAr("مختار البابا");        l7.setType(Type.MOKHTAR_HURUFIYYAT);        l7.setImgSrc("http://www.arabiccalligraphy.com/static/gallery/slide/ta3allam.png");        l7.setTags(Sets.newHashSet("Thuluth", "Hurufiyyat"));        lawhat[6] = l7;        Lawha l8 = new Lawha();        l8.setName("Quwwat");        l8.setNameAr("قوة");        l8.setArtist("Mokhtar El-Baba");        l8.setArtistAr("مختار البابا");        l8.setType(Type.MOKHTAR_HURUFIYYAT);        l8.setImgSrc("http://www.arabiccalligraphy.com/static/gallery/slide/quwwat.png");        l8.setTags(Sets.newHashSet("Thuluth", "Hurufiyyat"));        lawhat[7] = l8;    }    public void generateSampleData() {        for (int i = 0; i < 500; i++) {            Lawha l = (Lawha) SerializationUtils.clone(lawhat[randInt(0, lawhat.length - 1)]);            DateTime dt = Constants.DATE_FORMATTER.parseDateTime("2014-12-10 11:26:33.842-0500");            dt = dt.plusDays(randInt(1, 20));            dt = dt.plusHours(randInt(10, 200));            dt = dt.plusMinutes(randInt(10, 50));            l.setDateAdded(dt.toDate());            System.out.println(l.getImgSrc() + " - " + Constants.DATE_FORMATTER.print(l.getDateAdded().getTime()));            this.lawhaRepository.save(l);        }    }    public void deleteAllData() {        this.lawhaRepository.deleteAll();    }    private int randInt(int min, int max) {        return random.nextInt((max - min) + 1) + min;    }}